{"version":3,"file":"comments.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/types.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/version.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","../../node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/websocket/lib/browser.js","../../node_modules/websocket/lib/version.js","../../node_modules/es5-ext/global.js","../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","../../node_modules/@supabase/functions-js/dist/module/index.js","../../node_modules/@supabase/functions-js/dist/module/helper.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/supabaseClient.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../node_modules/generate-avatar/dist/md5hash.js","../../node_modules/generate-avatar/dist/generateFromString.js","../../node_modules/generate-avatar/dist/index.js","../../src/components/AllComments.svelte","../../src/components/CommentBox.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export const version = '1.35.3';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\nexport const STORAGE_KEY = 'supabase.auth.token';\n//# sourceMappingURL=constants.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    ERROR_MESSAGE: 'Request Failed',\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { NETWORK_FAILURE } from './constants';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (!(error === null || error === void 0 ? void 0 : error.status)) {\n        return reject({ message: NETWORK_FAILURE.ERROR_MESSAGE });\n    }\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n// LocalStorage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.setItem(key, JSON.stringify(data))));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.getItem(key)));\n    if (!value)\n        return null;\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const getItemSynchronously = (storage, key) => {\n    const value = isBrowser() && (storage === null || storage === void 0 ? void 0 : storage.getItem(key));\n    if (!value || typeof value !== 'string') {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.removeItem(key)));\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookies, getCookieString } from './lib/cookies';\nimport { expiresAt, resolveFetch } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an OpenID Connect user using their id_token.\n     * @param id_token The IDToken of the user.\n     * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n     * @param provider The provider of the user.\n     * @param client_id The clientID of the user.\n     * @param issuer The issuer of the user.\n     */\n    signInWithOpenIDConnect({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=id_token';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { id_token, nonce, client_id, issuer, provider }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const data = yield post(this.fetch, `${this.url}/otp${queryString}`, {\n                    email,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     */\n    sendMobileOTP(phone, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, {\n                    phone,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * @deprecated Use `verifyOTP` instead!\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Email / Mobile OTP to be verified\n     * @param email The user's email address\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param type verification type that the otp is generated for\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ email, phone, token, type = 'sms' }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { email, phone, token, type, redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     * @param req The request object.\n     * @param res The response object.\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookies(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        res.status(200).json({});\n    }\n    /**\n     * Deletes the Auth Cookies and redirects to the\n     * @param req The request object.\n     * @param res The response object.\n     * @param options Optionally specify a `redirectTo` URL in the options.\n     */\n    deleteAuthCookie(req, res, { redirectTo = '/' }) {\n        setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n            name: `${this.cookieName()}-${key}`,\n            value: '',\n            maxAge: -1,\n        })));\n        return res.redirect(307, redirectTo);\n    }\n    /**\n     * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n     * @param req The request object.\n     * @param res The response object.\n     * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n     */\n    getAuthCookieString(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            return getCookieString(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            return getCookieString(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        return res.getHeader('Set-Cookie');\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const access_token = req.cookies[`${this.cookieName()}-access-token`];\n                const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`];\n                if (!access_token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error: getUserError } = yield this.getUser(access_token);\n                if (getUserError) {\n                    if (!refresh_token)\n                        throw new Error('No refresh_token cookie found!');\n                    if (!res)\n                        throw new Error('You need to pass the res object to automatically refresh the session!');\n                    const { data, error } = yield this.refreshAccessToken(refresh_token);\n                    if (error) {\n                        throw error;\n                    }\n                    else if (data) {\n                        setCookies(req, res, [\n                            { key: 'access-token', value: data.access_token },\n                            { key: 'refresh-token', value: data.refresh_token },\n                        ].map((token) => {\n                            var _a;\n                            return ({\n                                name: `${this.cookieName()}-${token.key}`,\n                                value: token.value,\n                                domain: this.cookieOptions.domain,\n                                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                                path: this.cookieOptions.path,\n                                sameSite: this.cookieOptions.sameSite,\n                            });\n                        }));\n                        return { token: data.access_token, user: data.user, data: data.user, error: null };\n                    }\n                }\n                return { token: access_token, user: user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid, setItemAsync, removeItemAsync, getItemSynchronously, getItemAsync, } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY, EXPIRY_MARGIN, NETWORK_FAILURE, } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        this.networkRetries = 0;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        this._handleVisibilityChange();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider, oidc }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                if (oidc) {\n                    return this._handleOpenIDConnectSignIn(oidc);\n                }\n                throw new Error(`You must provide either an email, phone number, a third-party provider or OpenID Connect.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param type The user's verification type.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP(params, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyOTP(params, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: this.user() });\n        this._notifyAllSubscribers('TOKEN_REFRESHED');\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    _handleOpenIDConnectSignIn({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (id_token && nonce && ((client_id && issuer) || provider)) {\n                try {\n                    const { data, error } = yield this.api.signInWithOpenIDConnect({\n                        id_token,\n                        nonce,\n                        client_id,\n                        issuer,\n                        provider,\n                    });\n                    if (error || !data)\n                        return { user: null, session: null, error };\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    return { user: data.user, session: data, error: null };\n                }\n                catch (e) {\n                    return { user: null, session: null, error: e };\n                }\n            }\n            throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`);\n        });\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        try {\n            const data = getItemSynchronously(this.localStorage, STORAGE_KEY);\n            if (!data)\n                return null;\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow + EXPIRY_MARGIN && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield getItemAsync(this.localStorage, STORAGE_KEY);\n                if (!data)\n                    return null;\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        this.networkRetries++;\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            if (error.message === NETWORK_FAILURE.ERROR_MESSAGE &&\n                                this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) {\n                                if (this.refreshTokenTimer)\n                                    clearTimeout(this.refreshTokenTimer);\n                                this.refreshTokenTimer = setTimeout(() => this._recoverAndRefresh(), Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100 // exponential backoff\n                                );\n                                return;\n                            }\n                            yield this._removeSession();\n                        }\n                        this.networkRetries = 0;\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        setItemAsync(this.localStorage, STORAGE_KEY, data);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            removeItemAsync(this.localStorage, STORAGE_KEY);\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            this.networkRetries++;\n            const { error } = yield this._callRefreshToken();\n            if (!error)\n                this.networkRetries = 0;\n            if ((error === null || error === void 0 ? void 0 : error.message) === NETWORK_FAILURE.ERROR_MESSAGE &&\n                this.networkRetries < NETWORK_FAILURE.MAX_RETRIES)\n                this._startAutoRefreshToken(Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100); // exponential backoff\n        }), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._saveSession(newSession.currentSession);\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n    _handleVisibilityChange() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', () => {\n                if (document.visibilityState === 'visible') {\n                    this._recoverAndRefresh();\n                }\n            });\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        Object.assign(this, builder);\n        let _fetch;\n        if (builder.fetch) {\n            _fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            _fetch = crossFetch;\n        }\n        else {\n            _fetch = fetch;\n        }\n        this.fetch = (...args) => _fetch(...args);\n        this.shouldThrowOnError = builder.shouldThrowOnError || false;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError(throwOnError) {\n        if (throwOnError === null || throwOnError === undefined) {\n            throwOnError = true;\n        }\n        this.shouldThrowOnError = throwOnError;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.37.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, throwOnError, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n        this.shouldThrowOnError = throwOnError;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","export const version = '1.7.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nimport RealtimeSubscription from '../RealtimeSubscription';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.on(this.refEvent, callback);\n        }\n        else {\n            this.channel.on(this.refEvent, {}, callback);\n        }\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.off(this.refEvent);\n        }\n        else {\n            this.channel.off(this.refEvent, {});\n        }\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeSubscription\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel.on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel.joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel.on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceIds = newPresences.map((m) => m.presence_id);\n                const curPresenceIds = currentPresences.map((m) => m.presence_id);\n                const joinedPresences = newPresences.filter((m) => curPresenceIds.indexOf(m.presence_id) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceIds.indexOf(m.presence_id) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            const currentPresences = state[key];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences) {\n                const joinedPresenceIds = state[key].map((m) => m.presence_id);\n                const curPresences = currentPresences.filter((m) => joinedPresenceIds.indexOf(m.presence_id) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceIdsToRemove = leftPresences.map((m) => m.presence_id);\n            currentPresences = currentPresences.filter((m) => presenceIdsToRemove.indexOf(m.presence_id) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /**\n     * Returns the array of presences, with selected metadata.\n     */\n    static list(presences, chooser) {\n        if (!chooser) {\n            chooser = (_key, pres) => pres;\n        }\n        return this.map(presences, (key, presences) => chooser(key, presences));\n    }\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_id'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_id: '2', user_id: 1 },\n     *    { presence_id: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_id'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    list(by) {\n        return RealtimePresence.list(this.state, by);\n    }\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel.joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nexport default class RealtimeChannel {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    list() {\n        return this.presence.list();\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const configs = this.bindings.reduce((acc, binding) => {\n                const { type } = binding;\n                if (![\n                    'phx_close',\n                    'phx_error',\n                    'phx_reply',\n                    'presence_diff',\n                    'presence_state',\n                ].includes(type)) {\n                    acc[type] = binding;\n                }\n                return acc;\n            }, {});\n            if (Object.keys(configs).length) {\n                this.updateJoinPayload({ configs });\n            }\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     */\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     */\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    on(type, filter, callback) {\n        this.bindings.push({\n            type,\n            filter: filter !== null && filter !== void 0 ? filter : {},\n            callback: callback !== null && callback !== void 0 ? callback : (() => { }),\n        });\n    }\n    off(type, filter) {\n        this.bindings = this.bindings.filter((bind) => {\n            return !(bind.type === type && RealtimeChannel.isEqual(bind.filter, filter));\n        });\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     */\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(type, payload, ref) {\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(type) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        const handledPayload = this.onMessage(type, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            var _a, _b;\n            return ((bind === null || bind === void 0 ? void 0 : bind.type) === type &&\n                (((_a = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_b = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _b === void 0 ? void 0 : _b.event) === (payload === null || payload === void 0 ? void 0 : payload.event)));\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    send(payload) {\n        const push = this.push(payload.type, payload);\n        return new Promise((resolve, reject) => {\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => reject('timeout'));\n        });\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overriden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        var _a;\n        const { selfBroadcast } = chanParams, params = __rest(chanParams, [\"selfBroadcast\"]);\n        if (selfBroadcast) {\n            params.self_broadcast = selfBroadcast;\n        }\n        const chan = ((_a = this.params) === null || _a === void 0 ? void 0 : _a.vsndate) ? new RealtimeChannel(topic, params, this)\n            : new RealtimeSubscription(topic, params, this);\n        if (chan instanceof RealtimeChannel) {\n            chan.presence.onJoin((key, currentPresences, newPresences) => {\n                chan.trigger('presence', {\n                    event: 'JOIN',\n                    key,\n                    currentPresences,\n                    newPresences,\n                });\n            });\n            chan.presence.onLeave((key, currentPresences, leftPresences) => {\n                chan.trigger('presence', {\n                    event: 'LEAVE',\n                    key,\n                    currentPresences,\n                    leftPresences,\n                });\n            });\n            chan.presence.onSync(() => {\n                chan.trigger('presence', { event: 'SYNC' });\n            });\n        }\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ user_token: token });\n            if (channel.joinedOnce && channel.isJoined()) {\n                channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     */\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, shouldThrowOnError, }) {\n        super(url, { headers, schema, fetch, shouldThrowOnError });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","import crossFetch from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './constants';\nimport { get, post, put, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Copies an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     */\n    createSignedUrls(paths, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @params token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     * @param invokeOptions - object with the following properties\n     * `headers`: object representing the headers to send with the request\n     * `body`: the body of the request\n     * `responseType`: how the response should be parsed. The default is `json`\n     */\n    invoke(functionName, invokeOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, body } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: 'POST',\n                    headers: Object.assign({}, this.headers, headers),\n                    body,\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    return { data: null, error: new Error(yield response.text()) };\n                }\n                let data;\n                const { responseType } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                if (!responseType || responseType === 'json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'arrayBuffer') {\n                    data = yield response.arrayBuffer();\n                }\n                else if (responseType === 'blob') {\n                    data = yield response.blob();\n                }\n                else {\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import crossFetch from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.shouldThrowOnError = settings.shouldThrowOnError || false;\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this._getAuthHeaders(),\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Creates a channel with Broadcast and Presence.\n     * Activated when vsndate query param is present in the WebSocket URL.\n     */\n    channel(name, opts) {\n        var _a, _b;\n        const userToken = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        if (!this.realtime.isConnected()) {\n            this.realtime.connect();\n        }\n        return this.realtime.channel(name, Object.assign(Object.assign({}, opts), { user_token: userToken }));\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a channel and returns the number of open channels.\n     *\n     * @param channel The channel you want to close and remove.\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(channel);\n            const allChans = this.getSubscriptions();\n            const openChanCount = allChans.filter((chan) => chan.isJoined()).length;\n            if (allChans.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openChannels: openChanCount }, error };\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, cookieOptions, multiTab, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n            cookieOptions,\n            multiTab,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n            throwOnError: this.shouldThrowOnError,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = Object.assign({}, this.headers);\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = __api.env.SUPACOMMENT_SUPABASE_URL\nconst supabaseAnonKey = __api.env.SUPACOMMENT_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport const commentsData = writable([]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction md5cycle(x, k) {\n    var a = x[0];\n    var b = x[1];\n    var c = x[2];\n    var d = x[3];\n    a = ff(a, b, c, d, k[0], 7, -680876936);\n    d = ff(d, a, b, c, k[1], 12, -389564586);\n    c = ff(c, d, a, b, k[2], 17, 606105819);\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\n    a = ff(a, b, c, d, k[4], 7, -176418897);\n    d = ff(d, a, b, c, k[5], 12, 1200080426);\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\n    b = ff(b, c, d, a, k[7], 22, -45705983);\n    a = ff(a, b, c, d, k[8], 7, 1770035416);\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\n    c = ff(c, d, a, b, k[10], 17, -42063);\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\n    a = ff(a, b, c, d, k[12], 7, 1804603682);\n    d = ff(d, a, b, c, k[13], 12, -40341101);\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\n    b = ff(b, c, d, a, k[15], 22, 1236535329);\n    a = gg(a, b, c, d, k[1], 5, -165796510);\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\n    c = gg(c, d, a, b, k[11], 14, 643717713);\n    b = gg(b, c, d, a, k[0], 20, -373897302);\n    a = gg(a, b, c, d, k[5], 5, -701558691);\n    d = gg(d, a, b, c, k[10], 9, 38016083);\n    c = gg(c, d, a, b, k[15], 14, -660478335);\n    b = gg(b, c, d, a, k[4], 20, -405537848);\n    a = gg(a, b, c, d, k[9], 5, 568446438);\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\n    c = gg(c, d, a, b, k[3], 14, -187363961);\n    b = gg(b, c, d, a, k[8], 20, 1163531501);\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\n    d = gg(d, a, b, c, k[2], 9, -51403784);\n    c = gg(c, d, a, b, k[7], 14, 1735328473);\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\n    a = hh(a, b, c, d, k[5], 4, -378558);\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\n    c = hh(c, d, a, b, k[11], 16, 1839030562);\n    b = hh(b, c, d, a, k[14], 23, -35309556);\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\n    d = hh(d, a, b, c, k[4], 11, 1272893353);\n    c = hh(c, d, a, b, k[7], 16, -155497632);\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\n    a = hh(a, b, c, d, k[13], 4, 681279174);\n    d = hh(d, a, b, c, k[0], 11, -358537222);\n    c = hh(c, d, a, b, k[3], 16, -722521979);\n    b = hh(b, c, d, a, k[6], 23, 76029189);\n    a = hh(a, b, c, d, k[9], 4, -640364487);\n    d = hh(d, a, b, c, k[12], 11, -421815835);\n    c = hh(c, d, a, b, k[15], 16, 530742520);\n    b = hh(b, c, d, a, k[2], 23, -995338651);\n    a = ii(a, b, c, d, k[0], 6, -198630844);\n    d = ii(d, a, b, c, k[7], 10, 1126891415);\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\n    b = ii(b, c, d, a, k[5], 21, -57434055);\n    a = ii(a, b, c, d, k[12], 6, 1700485571);\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\n    c = ii(c, d, a, b, k[10], 15, -1051523);\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\n    a = ii(a, b, c, d, k[8], 6, 1873313359);\n    d = ii(d, a, b, c, k[15], 10, -30611744);\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\n    b = ii(b, c, d, a, k[13], 21, 1309151649);\n    a = ii(a, b, c, d, k[4], 6, -145523070);\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\n    c = ii(c, d, a, b, k[2], 15, 718787259);\n    b = ii(b, c, d, a, k[9], 21, -343485551);\n    x[0] = add32(a, x[0]);\n    x[1] = add32(b, x[1]);\n    x[2] = add32(c, x[2]);\n    x[3] = add32(d, x[3]);\n}\nfunction cmn(q, a, b, x, s, t) {\n    a = add32(add32(a, q), add32(x, t));\n    return add32((a << s) | (a >>> (32 - s)), b);\n}\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nfunction md51(s) {\n    var n = s.length;\n    var state = [1732584193, -271733879, -1732584194, 271733878];\n    var i;\n    for (i = 64; i <= s.length; i += 64) {\n        md5cycle(state, md5blk(s.substring(i - 64, i)));\n    }\n    s = s.substring(i - 64);\n    var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (i = 0; i < s.length; i++)\n        tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n    tail[i >> 2] |= 0x80 << (i % 4 << 3);\n    if (i > 55) {\n        md5cycle(state, tail);\n        for (i = 0; i < 16; i++)\n            tail[i] = 0;\n    }\n    tail[14] = n * 8;\n    md5cycle(state, tail);\n    return state;\n}\nfunction md5blk(s) {\n    var md5blks = [];\n    for (var i = 0; i < 64; i += 4) {\n        md5blks[i >> 2] =\n            s.charCodeAt(i) +\n                (s.charCodeAt(i + 1) << 8) +\n                (s.charCodeAt(i + 2) << 16) +\n                (s.charCodeAt(i + 3) << 24);\n    }\n    return md5blks;\n}\nvar hex_chr = \"0123456789abcdef\".split(\"\");\nfunction rhex(n) {\n    var s = \"\";\n    for (var j = 0; j < 4; j++)\n        s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f];\n    return s;\n}\nfunction hex(x) {\n    var num = [];\n    for (var i = 0; i < x.length; i++)\n        num[i] = rhex(x[i]);\n    return num.join(\"\");\n}\nfunction md5(s) {\n    return hex(md51(s));\n}\nexports.md5 = md5;\nfunction add32(a, b) {\n    return (a + b) & 0xffffffff;\n}\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar md5hash_1 = require(\"./md5hash\");\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex, 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return r + \",\" + g + \",\" + b;\n}\nfunction invertHex(hex) {\n    return (Number(\"0x1\" + hex) ^ 0xffffff).toString(16).substr(1).toUpperCase();\n}\nexports.invertHex = invertHex;\nfunction generatePath(curveVal, posVal, index) {\n    var cVal = curveVal;\n    var bigC = 300 - cVal;\n    var pos = posVal;\n    return \"m 150 \" + (100 + pos + 200 * index) + \" Q \" + bigC + \" \" + cVal + \" \" + (200 - pos - 200 * index) + \" 150 Q \" + bigC + \" \" + bigC + \" 150 \" + (200 - pos - 200 * index) + \" Q \" + cVal + \" \" + bigC + \" \" + (100 + pos + 200 * index) + \" 150 Q \" + cVal + \" \" + cVal + \" 150 \" + (100 + pos + 200 * index) + \" z\";\n}\nexports.generatePath = generatePath;\nfunction hydrateSVGBlog(data) {\n    return \"<svg width=\\\"300\\\" height=\\\"300\\\" viewBox=\\\"0 0 300 300\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect id=\\\"bg\\\" width=\\\"300\\\" height=\\\"300\\\" fill=\\\"rgb(\" + hexToRgb(data.background) + \")\\\" /><path d=\\\"\" + data.paths[0] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[0]) + \")\\\" /><path d=\\\"\" + data.paths[1] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[1]) + \")\\\" /><path d=\\\"\" + data.paths[2] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[2]) + \")\\\" /></svg>\";\n}\nfunction generateFromString(id) {\n    var idArr = md5hash_1.md5(id)\n        .split(\"\")\n        .filter(function (el) { return el !== \"-\"; });\n    var backgroundColor = idArr.splice(0, 6).join(\"\");\n    var elColor = idArr.splice(idArr.length - 6, idArr.length).join(\"\");\n    var arr = __spreadArrays(Array(10)).map(function () {\n        return parseInt(idArr.splice(0, 2).join(\"\"), 16);\n    });\n    var data = {\n        paths: [\n            generatePath(arr[0], arr[1], 2),\n            generatePath(arr[2], arr[3], 1),\n            generatePath(arr[4], arr[5], 0),\n        ],\n        colors: [elColor, invertHex(elColor), invertHex(backgroundColor)],\n        background: backgroundColor,\n    };\n    return hydrateSVGBlog(data);\n}\nexports.generateFromString = generateFromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generateFromString_1 = require(\"./generateFromString\");\nexports.generateFromString = generateFromString_1.generateFromString;\n","<script>\n  import { supabase } from \"../supabaseClient\";\n  import { commentsData } from \"../stores.js\";\n  import { generateFromString } from \"generate-avatar\";\n  export let postPath;\n  let loading = true;\n  export let clickToLoad;\n  let enableclickToLoad;\n\n  export const comments = async () => {\n    enableclickToLoad = false;\n    const { data, error } = await supabase\n      .from(\"comments\")\n      .select()\n      .order(\"created_at\", { ascending: false })\n      .filter(\"postURL\", \"in\", `(${postPath})`)\n      .filter(\"show\", \"is\", true);\n\n    commentsData.set(data);\n\n    if (data) {\n      loading = false;\n    }\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  if (clickToLoad) {\n    enableclickToLoad = true;\n  } else {\n    enableclickToLoad = false;\n    comments();\n  }\n</script>\n\n<main>\n  <div class=\"mx-auto container\">\n    <div class=\"flex flex-wrap\">\n      <div class=\"rounded-lg w-3/4 p-4\">\n        <div class=\"w-full p-3\">\n          <h3 class=\"text-gray-700 text-2xl font-bold\">User Comments</h3>\n        </div>\n        {#if enableclickToLoad}\n          <div class=\"w-full p-3\">\n            <button\n              class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n              on:click={() => {\n                comments();\n              }}\n            >\n              Load User Comments\n            </button>\n          </div>\n        {:else}\n          <div class=\"w-full p-3\">\n            <div class=\"w-full p-3\">\n              {loading ? \"Loading Comments...\" : \"\"}\n              {#each $commentsData as comment}\n                <div class=\"flex text-gray-700 p-3\">\n                  <img\n                    class=\"w-10 h-10 rounded-full mr-4\"\n                    src={`data:image/svg+xml;utf8,${generateFromString(\n                      comment.email || comment.name\n                    )}`}\n                    alt=\"avatar\"\n                  />\n                  <div class=\"text-sm\">\n                    <p class=\"font-bold\">{comment.name}</p>\n                    <p class=\"text-gray-600\">\n                      {comment.comment}\n                    </p>\n                  </div>\n                </div>\n              {/each}\n            </div>\n          </div>\n        {/if}\n      </div>\n    </div>\n  </div>\n</main>\n\n<style></style>\n","<script>\n  import { supabase } from \"../supabaseClient\";\n  export let postPath;\n  let name;\n  let email;\n  let comment;\n  let success = false;\n\n  const checkAndInsert = async () => {\n    if (name && comment) {\n      const { data, error } = await supabase.from(\"comments\").insert({\n        postURL: postPath,\n        name: name,\n        email: email,\n        comment: comment,\n        show: true,\n      });\n\n      if (data) {\n        success = true;\n        alert(\"Commented Succesfully\");\n        name = \"\";\n        email = \"\";\n        comment = \"\";\n        window.location.reload();\n      }\n\n      if (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\"Please fill in all fields\");\n    }\n  };\n</script>\n\n<main>\n  <!-- Create a comment box with name, email and comment textarea with tailwindcss -->\n  <div class=\"mx-auto container\">\n    <div class=\"flex flex-wrap\">\n      <div class=\"bg-gray-100 shadow-lg rounded-lg w-full p-4 m-5\">\n        <div class=\"w-full p-3\">\n          <h1 class=\"text-2xl text-gray-500\">What do you think?</h1>\n        </div>\n        <div class=\"w-full p-3\">\n          <input\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            bind:value={name}\n            required\n          />\n        </div>\n        <div class=\"w-full p-3\">\n          <input\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Email (Optional)\"\n            bind:value={email}\n          />\n        </div>\n        <div class=\"w-full p-3\">\n          <textarea\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            rows=\"5\"\n            id=\"comment\"\n            type=\"text\"\n            placeholder=\"Write your Comment\"\n            bind:value={comment}\n          />\n        </div>\n        <div class=\"w-full p-3\">\n          <button\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            on:click={() => {\n              checkAndInsert();\n            }}\n          >\n            Submit Comment!\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</main>\n\n<style>\n</style>\n","<script>\n  import AllComments from \"./components/AllComments.svelte\";\n  import CommentBox from \"./components/CommentBox.svelte\";\n  const postPath = window.location.pathname;\n  const hostURL = window.location.host;\n  export let appUrl;\n  export let clickToLoad;\n\n  const Props = {\n    hostURL,\n    postPath,\n    clickToLoad,\n  };\n</script>\n\n<main>\n  {#if hostURL === appUrl}\n    <CommentBox {...Props} />\n    <AllComments {...Props} />\n  {:else}\n    <h1 class=\"text-6xl text-red-500 p-5\">Unauthorized Website</h1>\n  {/if}\n</main>\n\n<style>\n</style>\n","import App from \"./App.svelte\";\n\nlet comments = document.getElementById(\"comments\");\nlet appUrl = comments.getAttribute(\"data-url\") || \"localhost:8080\";\nlet clickToLoad = comments.getAttribute(\"clickToLoad\") || false;\n\nconst app = new App({\n  target: comments,\n  props: {\n    appUrl: appUrl,\n    clickToLoad: clickToLoad,\n  },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","DEFAULT_HEADERS","NETWORK_FAILURE","STORAGE_KEY","COOKIE_OPTIONS","lifetime","domain","path","sameSite","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","apply","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","_handleRequest","fetcher","method","body","params","headers","_getRequestParams","ok","noResolveJson","json","catch","status","handleError","get","post","put","serializeCookie","cookie","secure","_a","_b","_c","val","opt","enc","encodeURIComponent","fieldContentRegExp","TypeError","test","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","toLowerCase","serialize","Date","now","getCookieString","req","res","cookies","strCookies","host","Error","split","endsWith","isSecureEnvironment","previousCookies","getHeader","prototype","setCookies","setHeader","global","self","__self__","F","fetch","DOMException","exports","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","toString","call","normalizeName","String","normalizeValue","iteratorFor","items","iterator","shift","Headers","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","parse","oldValue","hasOwnProperty","values","entries","methods","Request","upcased","credentials","mode","signal","toUpperCase","referrer","form","trim","bytes","replace","decodeURIComponent","Response","bodyInit","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","constructor","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","default","module","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","results","RegExp","exec","resolveFetch","customFetch","_fetch","crossFetch","args","GoTrueApi","cookieOptions","_createRequestHeaders","jwt","cookieName","getUrlForProvider","provider","urlParams","redirectTo","scopes","signUpWithEmail","email","password","queryString","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","shouldCreateUser","create_user","sendMobileOTP","signOut","verifyMobileOTP","token","redirect_to","verifyOTP","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","access_token","deleteAuthCookie","getAuthCookieString","generateLink","createUser","attributes","user","listUsers","users","getUserById","uid","getUserByCookie","getUserError","getUser","updateUserById","deleteUser","remove","updateUser","globalThis","configurable","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","SupabaseAuthClient","stateChangeEmitters","networkRetries","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","_handleVisibilityChange","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","oidc","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","_handleOpenIDConnectSignIn","refreshSession","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","r","random","subscription","confirmed_at","email_confirmed_at","phone_confirmed_at","storage","getItem","getItemSynchronously","log","refreshTokenTimer","clearTimeout","setTimeout","pow","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","setItemAsync","removeItem","unref","newSession","newValue","visibilityState","super","PostgrestBuilder","builder","shouldThrowOnError","throwOnError","onfulfilled","onrejected","schema","includes","count","isReturnMinimal","countHeader","match","contentRange","_d","fetchError","details","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","ignoreDuplicates","PostgrestRpcBuilder","rpc","PostgrestClient","auth","table","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_","_globalThis","version","naiveFallback","__global__","require$$0","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","require$$1","W3CWebSocket","uri","protocols","prop","browser","w3cwebsocket","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","ref","payload","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","updatePayload","receive","makeRef","replyEventName","_cancelTimeout","_matchReceive","RealtimeSubscription","on","trigger","destroy","off","h","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","close","bind","canPush","isJoined","updateJoinPayload","leaving","leavePush","leave","onMessage","isMember","leaveOpenTopic","joining","handledPayload","isErrored","RealtimePresence","opts","pendingDiffs","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresences","currentPresences","newPresenceIds","presence_id","curPresenceIds","joinedPresences","leftPresences","joinedPresenceIds","curPresences","presenceIdsToRemove","chooser","_key","pres","func","metas","presence","list","by","RealtimeChannel","configs","binding","isEqual","obj1","obj2","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","connecting","Connecting","Open","closing","Closing","Closed","chanParams","selfBroadcast","self_broadcast","chan","vsndate","rawMessage","_appendParams","vsn","newRef","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","Transformers.convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","errors","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","createSignedUrl","signedURL","createSignedUrls","paths","datum","download","getPublicUrl","publicURL","prefixes","StorageClient","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","FunctionsClient","Authorization","invoke","functionName","invokeOptions","isRelayError","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","functions","_getAuthHeaders","SupabaseStorageClient","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","removeChannel","_closeSubscription","allChans","openChanCount","openChannels","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","authHeaders","apikey","authBearer","previousAccessToken","_handleTokenChanged","source","changedAccessToken","supabase","createClient","subscriber_queue","commentsData","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","writable","md5cycle","ff","gg","hh","ii","add32","cmn","q","md5blk","md5blks","charCodeAt","md5hash","hex_chr","rhex","j","md5","num","hex","substring","tail","md51","__spreadArrays","il","jl","generateFromString_1","md5hash_1","hexToRgb","bigint","invertHex","substr","generatePath","curveVal","posVal","bigC","generateFromString$2","generateFromString","idArr","el","backgroundColor","elColor","background","colors","hydrateSVGBlog","dist","div1","div0","t0","t0_value","iterations","div","button","t1_value","t3_value","comment","img","img_src_value","p0","p1","t1","t3","create_if_block","main","div3","div2","enableclickToLoad","postPath","loading","clickToLoad","comments","async","$$invalidate","div7","div6","div5","input0","input1","textarea","div4","checkAndInsert","postURL","show","alert","reload","h1","pathname","hostURL","appUrl","Props","getElementById"],"mappings":"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"}